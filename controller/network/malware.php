<?php
$pa = new PaloAltoAPI();
$table = "ncert_malicious_sites"; 

$db->query($table, $condition = "type LIKE :type", $order_by ="1", $fields ="*", $limit = "", [':type'=>'domain']);
$total_dn_query_num = $db->getLastNumRows();
$condition = "type LIKE :type and scan_action LIKE :action";
$order_by = "1";
$allowDNs = $db->query($table, $condition, $order_by, $fields = "*", $limit = "", [':type'=>'domain', ':action'=>'allow']);
$allow_dn_query_num = $db->getLastNumRows();
$denyDNs = $db->query($table, $condition, $order_by, $fields = "*", $limit = "", [':type'=>'domain', ':action'=>'deny']);
$last_dn_update = $db->query($table, $condition = "type LIKE :type", $order_by ="1", $fields ="*", $limit = "LIMIT 1", [':type'=>'domain'])[0]['updated_at'];

$db->query($table, $condition = "type LIKE :type", $order_by ="1", $fields ="*", $limit = "", [':type'=>'ip']);
$total_ip_query_num = $db->getLastNumRows();
$condition = "type LIKE :type and scan_action LIKE :action";
$order_by = "1";
$allowIPs = $db->query($table, $condition, $order_by, $fields = "*", $limit = "", [':type'=>'ip', ':action'=>'allow']);
$allow_ip_query_num = $db->getLastNumRows();
$denyIPs = $db->query($table, $condition, $order_by, $fields = "*", $limit = "", [':type'=>'ip', ':action'=>'deny']);
$last_ip_update = $db->query($table, $condition = "type LIKE :type", $order_by ="1", $fields ="*", $limit = "LIMIT 1", [':type'=>'ip'])[0]['updated_at'];

$object_type = 'ExternalDynamicLists'; 
$name = '';
$result = $pa->getObjectList($object_type, $name);
$result = json_decode($result);

if (@$result->{'@status'} != "success") {
    $entries = array();
} else {
    $entries = $result->result->entry;
}

$entry_array = array();
$show_records = 10;

foreach($entries as $index => $entry){
    $name = $entry->{'@name'};
    $type = $entry->{'type'};
    $num_records = 1;
    foreach($type as $type_name => $val){
        $type = $type_name;
    }
    $xml_type = "op";
    $cmd = "<request><system><external-list><show><type><".$type."><name>".$name."</name><num-records>".$num_records."</num-records></".$type."></type></show></external-list></system></request>";
    $record = $pa->getXmlCmdResponse($xml_type, $cmd);
    $xml = simplexml_load_string($record) or die("Error: Cannot create object");

    $entry_array[$index]['status'] = $xml['status'];
    $entry_array[$index]['name'] = $name;
    if($xml['status'] != 'success'){
        continue ;
    }
    $total_count = $xml->result['total-count'];
    $cmd = "<request><system><external-list><show><type><".$type."><name>".$name."</name><num-records>".$total_count."</num-records></".$type."></type></show></external-list></system></request>";
    $record = $pa->getXmlCmdResponse($xml_type, $cmd);
    $xml = simplexml_load_string($record) or die("Error: Cannot create object");
    $members = $xml->result->{'external-list'}->{'valid-members'}->member; 
    $entry_array[$index]['total_count'] = $total_count;
    $entry_array[$index]['members'] = $members;
}

require 'view/header/default.php'; 
require 'view/body/network/malware.php';
require 'view/footer/default.php'; 
